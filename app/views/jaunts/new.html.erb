<meta name="viewport" content="initial-scale=1.0">

<style>
html, body {
  height: 100%;
  margin: 0;
  padding: 0;
}
#map {
  height: 100%;
}

.controls {
  margin-top: 10px;
  border: 1px solid transparent;
  border-radius: 2px 0 0 2px;
  box-sizing: border-box;
  -moz-box-sizing: border-box;
  height: 32px;
  outline: none;
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
}


#origin-input,
#destination-input {
  background-color: #fff;
  font-family: Roboto;
  font-size: 15px;
  font-weight: 300;
  margin-left: 12px;
  padding: 0 11px 0 13px;
  text-overflow: ellipsis;
  width: 200px;
}
</style>


<input id="origin-input" class="controls" type="text" placeholder="Enter an origin location">
<div id="map"></div>

<script>
var map, latitude, longitude;

function expandViewportToFitPlace(map, place) {
  if (place.geometry.viewport) {
    map.fitBounds(place.geometry.viewport);
  } else {
    map.setCenter(place.geometry.location);
    // map.panTo(place.geometry.location);
    map.setZoom(15);
  }
}



function initMap() {
  if(latitude && longitude) {
    map = new google.maps.Map(document.getElementById('map'), {
      center: {lat: latitude, lng: longitude},
      zoom: 12
    });
  } else {
    setTimeout(initMap, 100);
    return;
  }

  var origin_input = document.getElementById('origin-input');
  map.controls[google.maps.ControlPosition.TOP_LEFT].push(origin_input);

  var origin_autocomplete = new google.maps.places.Autocomplete(origin_input);
  origin_autocomplete.bindTo('bounds', map);

  // var directionsDisplay = new google.maps.DirectionsRenderer({map: map});

  origin_autocomplete.addListener('place_changed', function() {
    var place = origin_autocomplete.getPlace();
    if (!place.geometry) {
      window.alert("Autocomplete's returned place contains no geometry");
      return;
    }
    expandViewportToFitPlace(map, place);
    // TODO: track this marker
    var marker = new google.maps.Marker({map: map});
    marker.addListener('click', function() { });
    marker.setPlace({placeId: place.place_id, location: place.geometry.location});
    marker.setVisible(true);
  });

  map.addListener('click', function(e) {
    placeMarkerAndPanTo(e.latLng, map);
  });
}

function placeMarkerAndPanTo(latLng, map) {
  // TODO: track this marker
  var marker = new google.maps.Marker({
    position: latLng,
    map: map
  });
}

navigator.geolocation.getCurrentPosition(function(geo) {
  latitude  = geo.coords.latitude;
  longitude = geo.coords.longitude;
});
</script>

<script src="https://maps.googleapis.com/maps/api/js?key=<%= @api_key || raise %>&callback=initMap&libraries=places" async defer>
</script>
